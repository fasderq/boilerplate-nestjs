{"version":3,"file":"config.service.js","sourceRoot":"","sources":["../../src/config/config.service.ts"],"names":[],"mappings":";;AAIA,8CAAmD;AAEnD,2BAAkC;AAClC,qCAAmC;AACnC,6BAA0C;AAE1C,MAAa,aAAa;IAKtB,YAAY,OAAe,6BAAiB;QACxC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,sBAAsB,EAAE,CAAC;IAC5D,CAAC;IAES,sBAAsB;QAC5B,OAAO,kBAAQ,CACX,YAAS,CACL,iBAAY,CACR,IAAI,CAAC,IAAI,EACT,EAAE,QAAQ,EAAE,MAAM,EAAE,CACvB,EACD,EAAE,GAAG,EAAE,OAAO,CAAC,GAAG,EAAE,CACvB,CACJ,CAAC;IACN,CAAC;IAEM,qBAAqB;QACxB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACnC,CAAC;IAEM,oBAAoB;QACvB,MAAM,EACF,eAAe,EAAE,EACb,IAAI,EACJ,IAAI,EACJ,QAAQ,EACR,QAAQ,EACR,QAAQ,GACX,EACJ,GAAG,IAAI,CAAC,kBAAkB,CAAC;QAE5B,OAAO;YACH,IAAI,EAAE,UAAU;YAChB,IAAI;YACJ,IAAI;YACJ,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ,EAAE,CAAC,kCAAkC,CAAC;YAC9C,OAAO,EAAE,IAAI;YACb,WAAW,EAAE,IAAI;SACpB,CAAA;IACL,CAAC;CACJ;AAjDD,sCAiDC","sourcesContent":["import {\n    TypeOrmOptionsFactory,\n    TypeOrmModuleOptions,\n} from '@nestjs/typeorm';\nimport { DefaultConfigPath } from '@app/constants';\nimport { ApplicationOptions } from '@types';\nimport { readFileSync } from 'fs';\nimport { safeLoad } from 'js-yaml';\nimport { render as ejsRender } from 'ejs';\n\nexport class ConfigService implements TypeOrmOptionsFactory {\n\n    protected readonly path: string;\n    protected applicationOptions: ApplicationOptions;\n\n    constructor(path: string = DefaultConfigPath) {\n        this.path = path;\n        this.applicationOptions = this.loadApplicationOptions();\n    }\n\n    protected loadApplicationOptions(): ApplicationOptions {\n        return safeLoad(\n            ejsRender(\n                readFileSync(\n                    this.path,\n                    { encoding: 'utf8' }\n                ),\n                { env: process.env },\n            )\n        );\n    }\n\n    public getApplicationOptions(): ApplicationOptions {\n        return this.applicationOptions;\n    }\n\n    public createTypeOrmOptions(): TypeOrmModuleOptions {\n        const {\n            databaseOptions: {\n                host,\n                port,\n                username,\n                password,\n                database,\n            }\n        } = this.applicationOptions;\n\n        return {\n            type: 'postgres',\n            host,\n            port,\n            username,\n            password,\n            database,\n            entities: ['./src/entities/*.entity{.ts,.js}'],\n            logging: true,\n            synchronize: true,\n        }\n    }\n}\n"]}