{"version":3,"file":"env.helper.js","sourceRoot":"","sources":["../../src/utils/env.helper.ts"],"names":[],"mappings":";;AAEA,MAAa,SAAS;IAEX,MAAM,CAAC,UAAU;QACpB,OAAO,OAAO,CAAC,GAAG,CAAC,QAAe,IAAI,aAAa,CAAC;IACxD,CAAC;IAEM,MAAM,CAAC,YAAY;QACtB,OAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,CAAC;IACjD,CAAC;IAEM,MAAM,CAAC,SAAS;QACnB,MAAM,IAAI,GAAsB,OAAO,CAAC,GAAG,CAAC;QAE5C,KAAK,MAAM,OAAO,IAAI,IAAI,EAAE;YACxB,IAAI,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE;gBAC9B,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;aAC7C;SACJ;IACL,CAAC;IAEM,MAAM,CAAC,UAAU;QACpB,OAAO,OAAO,CAAC,GAAG,CAAC;IACvB,CAAC;CACJ;AAvBD,8BAuBC","sourcesContent":["import { ENV } from '@types';\n\nexport class EnvHelper {\n\n    public static getNodeEnv(): ENV {\n        return process.env.NODE_ENV as ENV || 'development';\n    }\n\n    public static isProduction(): boolean {\n        return process.env.NODE_ENV === 'production';\n    }\n\n    public static printEnvs(): void {\n        const envs: NodeJS.ProcessEnv = process.env;\n\n        for (const envName in envs) {\n            if (envs.hasOwnProperty(envName)) {\n                console.log(`${envName}=${envs[envName]}`)\n            }\n        }\n    }\n\n    public static getAllEnvs(): NodeJS.ProcessEnv {\n        return process.env;\n    }\n}\n"]}